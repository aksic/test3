  public static String decryptPassword(String password) {
	
	try {
	    return DatatypeConverter.parseBase64Binary(decriptText(password, getSecretEncryptionKey()));
	} catch (Exception e) {
	    throw new RuntimeException(Messages.getString("Utils.runtimeErrorEncript"), e);
	}
	
	  

    }

    public static String encryptPassword(String password) {
	try {
	    return DatatypeConverter.printBase64Binary(encryptText(password, getSecretEncryptionKey()));
	} catch (Exception e) {
	    throw new RuntimeException(Messages.getString("Utils.runtimeErrorEncript"), e);
	}
	return new String(Base64.getEncoder().encode(password.getBytes()));
    }

 private static SecretKey getSecretEncryptionKey() throws Exception {
	KeyGenerator generator = KeyGenerator.getInstance("AES");
	generator.init(128);
	SecretKey secKey = generator.generateKey();
	return secKey;
    }

    private static byte[] encryptText(String plainText, SecretKey secKey) throws Exception {
	Cipher aesCipher = Cipher.getInstance("AES");
	aesCipher.init(Cipher.ENCRYPT_MODE, secKey);
	byte[] byteCipherText = aesCipher.doFinal(plainText.getBytes());
	return byteCipherText;
    }

    private static String decryptText(byte[] byteCipherText, SecretKey secKey) throws Exception {
	Cipher aesCipher = Cipher.getInstance("AES");
	aesCipher.init(Cipher.DECRYPT_MODE, secKey);
	byte[] bytePlainText = aesCipher.doFinal(byteCipherText);
	return new String(bytePlainText);
    }
